// This file is generated by cargo_embargo.
// Do not modify this file after the first "rust_*" or "genrule" module
// because the changes will be overridden on upgrade.
// Content before the first "rust_*" or "genrule" module is preserved.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "external_crosvm_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-BSD
    default_applicable_licenses: ["external_crosvm_license"],
}

rust_library {
    name: "libprotos",
    defaults: ["crosvm_inner_defaults"],
    host_supported: true,
    crate_name: "protos",
    cargo_env_compat: true,
    cargo_pkg_version: "0.1.0",
    crate_root: "src/lib.rs",
    edition: "2021",
    features: [
        "composite-disk",
        "registered_events",
    ],
    rustlibs: [
        "libcdisk_spec_proto",
        "libprotobuf",
        "libregistered_events_proto",
    ],
}

rust_protobuf {
    name: "libcdisk_spec_proto",
    crate_name: "cdisk_spec_proto",
    protos: ["src/cdisk_spec.proto"],
    source_stem: "cdisk_spec",
    host_supported: true,
    apex_available: [
        "com.android.virt",
    ],
}

rust_protobuf {
    name: "libregistered_events_proto",
    crate_name: "registered_events_proto",
    protos: ["src/registered_events.proto"],
    source_stem: "registered_events",
    host_supported: true,
    apex_available: [
        "com.android.virt",
    ],
}

rust_protobuf {
    name: "libcrosvm_plugin_proto",
    crate_name: "crosvm_plugin_proto",
    protos: ["src/plugin.proto"],
    source_stem: "plugin",
    host_supported: true,
}
