diff --git a/base/Android.bp b/base/Android.bp
index d3544ede..faea7809 100644
--- a/base/Android.bp
+++ b/base/Android.bp
@@ -45,6 +44,25 @@ rust_test {
         "libbase_event_token_derive",
         "libremain",
     ],
+    target: {
+        android: {
+            rustlibs: ["libandroid_log_sys"],
+        },
+        linux_bionic_arm64: {
+            // For ARM architecture, we use aarch64-linux-android for BOTH
+            // device and host targets. As a result, host targets are also
+            // built with target_os = "android". Therefore, sys_util/src/android
+            // is used and thus this android module is required.
+            // This seems incorrect, but is inevitable because rustc doesn't
+            // yet support a Linux-based target using Bionic as libc. We can't
+            // use aarch64-unknown-linux-gnu because it's using glibc which
+            // we don't support for cross-host builds.
+            rustlibs: [
+                "libandroid_log_sys",
+            ],
+        },
+    },
+    shared_libs: ["libcap"], // specified in src/unix/capabilities.rs
 }
 
 rust_library {
@@ -81,4 +99,23 @@ rust_library {
     apex_available: [
         "//apex_available:platform",
     ],
+    target: {
+        android: {
+            rustlibs: ["libandroid_log_sys"],
+        },
+        linux_bionic_arm64: {
+            // For ARM architecture, we use aarch64-linux-android for BOTH
+            // device and host targets. As a result, host targets are also
+            // built with target_os = "android". Therefore, sys_util/src/android
+            // is used and thus this android module is required.
+            // This seems incorrect, but is inevitable because rustc doesn't
+            // yet support a Linux-based target using Bionic as libc. We can't
+            // use aarch64-unknown-linux-gnu because it's using glibc which
+            // we don't support for cross-host builds.
+            rustlibs: [
+                "libandroid_log_sys",
+            ],
+        },
+    },
+    shared_libs: ["libcap"], // specified in src/unix/capabilities.rs
 }
